/* eslint-disable @next/next/no-img-element */
import Head from "next/head";
import { Inter } from "@next/font/google";
import Link from "next/link";
import { useRouter } from "next/router";

const inter = Inter({ subsets: ["latin"] });

const navLinks = [
	{ id: 0, name: "Home", url: "/" },
	{ id: 1, name: "Companies", url: "/AddCompaniesPage" },
];

export default function Home() {
	const router = useRouter();

	const handleClick = (e: any) => {
		console.log("button clicked!");
		router.push("/AddJobPage");
	};

	return (
		<>
			<Head>
				<title>Latest Tech Jobs</title>
				<meta
					name="description"
					content="Generated by create next app"
				/>
				<meta
					name="viewport"
					content="width=device-width, initial-scale=1"
				/>
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<main className="container mx-auto">
				<nav className="flex justify-between items-center m-8">
					<div className="flex space-x-8">
						{navLinks.map((link, i) => (
							<ul key={i}>
								<li>
									<Link href={link.url}>{link.name}</Link>
								</li>
							</ul>
						))}
					</div>

					<button type="button" className="btn" onClick={handleClick}>
						Post Job for Free
					</button>
				</nav>
				<div className="mt-40 text-center">
					<h1 className="text-5xl font-black">
						FIND THE LATEST TECH JOBS
					</h1>
					<h3>Job Board cureated for developers</h3>
				</div>
				<form
					action="POST"
					className="mt-20 container mx-auto w-1/2 form-control"
				>
					<div className="flex justify-center space-x-10">
						<input
							type="text"
							className="input input-bordered w-full input-lg"
							placeholder="keyword"
						/>

						<input
							type="text"
							className="input input-bordered w-full input-lg"
							placeholder="location"
						/>
					</div>

                        <div className="space-x-4">
                          {job.remote && (
                            <span className="px-2 py-1 lg:px-[.7em] lg:py-[.3em] rounded-full bg-cyan-200 text-xs text-cyan-800">
                              remote
                            </span>
                          )}
                          {job.experience && (
                            <span className="px-2 py-1 lg:px-[.7em] lg:py-[.3em] bg-indigo-200 rounded-full text-xs text-indigo-800 ">
                              {job.experience}
                            </span>
                          )}
                          {job.employmentType && (
                            <span className="px-2 py-1 lg:px-[.7em] lg:py-[.3em] rounded-full bg-cyan-500 text-xs text-cyan-900">
                              {job.employmentType}
                            </span>
                          )}
                        </div>
                      </div>
                      <div className="collapse-content peer-checked:bg-gray-50 dark:text-black">
                        <div
                          className="pt-8"
                          dangerouslySetInnerHTML={{
                            __html: job.jobDescription,
                          }}
                        ></div>
                        <div className="flex justify-between pt-6">
                          <a
                            href={job.applicationUrl}
                            target="_blank"
                            rel="noreferrer"
                          >
                            <button
                              type="button"
                              className="btn btn-outline btn-primary"
                            >
                              APPLY NOW
                            </button>
                          </a>
                          <button type="button" className="btn btn-outline">
                            MORE INFO
                          </button>
                        </div>
                      </div>
                    </div>
                  ))}
                </div>
              )
            )}
          </ul>
        </div>
      </main>
    </>
  );
}

export async function getServerSideProps() {
  try {
    const data = await getJobs();
    // console.log(data);
    return {
      props: { jobs: data },
    };
  } catch (e) {
    console.error(e);
  }
}
