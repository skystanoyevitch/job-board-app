import Head from "next/head";
import { JobSearch } from "@/components/JobSearch/JobSearch";
import { getJobs } from "./api/jobs";
// import Image from "next/image";
import { useState } from "react";

export default function Home({ jobs }: any) {
  const [queryTitle, setQueryTitle] = useState(jobs);
  const [filteredJobs, setFilteredJobs] = useState([]);

  const titleSearchResults = (e: React.ChangeEvent<HTMLInputElement>) => {
    const { name, value } = e.target;
    setQueryTitle({ [name]: value, [name]: value });
    console.log(queryTitle.jobLocation);

    if (queryTitle.title !== "" || queryTitle.jobLocation !== "") {
      const getFilter = jobs.filter((job: any) => {
        const jobTitleSearch = job.title
          .toLowerCase()
          .includes(queryTitle.title?.toLowerCase());
        const jobLocationSearch = job.jobLocation?.map(
          (jobLocationString: any) => {
            jobLocationString
              .toLowerCase()
              .includes(queryTitle.jobLocation?.toLowerCase());
          }
        );
        if (queryTitle.title === "" || queryTitle.jobLocation === "") return;
        return jobTitleSearch || jobLocationSearch;
      });
      setFilteredJobs(getFilter);
    }
  };

  return (
    <>
      <Head>
        <title>Latest Tech Jobs</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="container mx-auto mt-20">
        <div className="text-center">
          <h1 className="lg:text-6xl font-black pb-4">
            FIND THE LATEST TECH JOBS
          </h1>
          <h3 className="text-xl">a job board curated for developers</h3>
        </div>
        <JobSearch
          queryTitle={queryTitle}
          titleSearchResults={titleSearchResults}
          // locationSearchResults={locationSearchResults}
          // queryLocation={queryLocation}
        />
        <div className="container mx-auto w-1/2">
          <ul>
            {queryTitle.title || queryTitle.jobLocation ? (
              filteredJobs.map((job: any) => (
                <div key={job._id} className="collapse border collapse-arrow">
                  <input type="checkbox" className="" />
                  <div className="collapse-title">
                    <div className="text-sm text-blue-500">
                      {job.company.name}
                    </div>
                    <h1 className="text-xl font-semibold text-gray-700 pb-2 dark:text-white">
                      {job.title}
                    </h1>
                    <h3 className="text-sm">{job.jobLocation}</h3>
                    <div className="space-x-4">
                      {job.remote && (
                        <span className=" lg:px-[.6em] border-2 border-cyan-500 rounded-md text-cyan-500 text-sm">
                          remote
                        </span>
                      )}
                      {job.experience === "part time" && (
                        <span className=" lg:px-[.3em] border-2 border-indigo-500 rounded-md text-indigo-500 text-sm">
                          part time
                        </span>
                      )}
                      {job.employmentType === "entry level" && (
                        <span className=" lg:px-[.3em] border-2 border-cyan-500 rounded-md text-cyan-500 text-sm">
                          entry level
                        </span>
                      )}
                    </div>
                  </div>
                  <div className="collapse-content">
                    <div
                      className="pt-8"
                      dangerouslySetInnerHTML={{
                        __html: job.jobDescription,
                      }}
                    ></div>
                    <div className="flex justify-between pt-6">
                      <a
                        href={job.applicationUrl}
                        target="_blank"
                        rel="noreferrer"
                      >
                        <button
                          type="button"
                          className="btn btn-outline btn-primary"
                        >
                          APPLY NOW
                        </button>
                      </a>
                      <button type="button" className="btn btn-outline">
                        MORE INFO
                      </button>
                    </div>
                  </div>
                </div>
              ))
            ) : (
              <div className="mt-14">
                {jobs.map((job: any, index: any) => (
                  <div
                    key={index}
                    className="collapse border collapse-arrow p-2"
                  >
                    <input type="checkbox" className="" />
                    <div className="collapse-title">
                      <div className="text-sm font-semibold text-blue-500">
                        {job.company.name}
                      </div>
                      <div className="pb-2">
                        <h1 className="text-2xl font-regular text-gray-700 dark:text-white">
                          {job.title}
                        </h1>
                        <h3 className="text-sm">{job.jobLocation}</h3>
                      </div>

                      <div className="space-x-4">
                        {job.remote && (
                          <span className=" lg:px-[.7em] lg:py-[.3em] rounded-full bg-cyan-200 text-xs text-cyan-800">
                            remote
                          </span>
                        )}
                        {job.experience === "part time" && (
                          <span className=" lg:px-[.7em] lg:py-[.3em] bg-indigo-200 rounded-full text-xs text-indigo-800 ">
                            part time
                          </span>
                        )}
                        {job.employmentType === "entry level" && (
                          <span className=" lg:px-[.7em] lg:py-[.3em] rounded-full bg-cyan-500 text-xs ">
                            entry level
                          </span>
                        )}
                      </div>
                    </div>
                    <div className="collapse-content">
                      <div
                        className="pt-8"
                        dangerouslySetInnerHTML={{
                          __html: job.jobDescription,
                        }}
                      ></div>
                      <div className="flex justify-between pt-6">
                        <a
                          href={job.applicationUrl}
                          target="_blank"
                          rel="noreferrer"
                        >
                          <button
                            type="button"
                            className="btn btn-outline btn-primary"
                          >
                            APPLY NOW
                          </button>
                        </a>
                        <button type="button" className="btn btn-outline">
                          MORE INFO
                        </button>
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            )}
          </ul>
        </div>
      </main>
    </>
  );
}

export async function getServerSideProps() {
  try {
    const data = await getJobs();

    // console.log(data);
    return {
      props: { jobs: data },
    };
  } catch (e) {
    console.error(e);
  }
}
